apply plugin: 'com.android.model.application'

model {
	android {
	    compileSdkVersion 23
	    buildToolsVersion "23.0.3"

	    defaultConfig {
	        applicationId "com.exponent.androidopacitydemo"
	        minSdkVersion.apiLevel 23
	        targetSdkVersion.apiLevel 23
	        versionCode 1
	        versionName "1.0"
	    }

		/*
         * native build settings
         */
		ndk {
			moduleName = "exp-openssl"

			CFlags.add("-I${getRootDir()}/openssl-1.0.2g/include".toString())
			ldFlags.add("-L${getRootDir()}/openssl-1.0.2g".toString())
			ldLibs.add("crypto")
			/*
             * Other ndk flags configurable here are
             * cppFlags.add("-fno-rtti")
             * cppFlags.add("-fno-exceptions")
             * ldLibs.addAll(["android", "log"])
             * stl       = "system"
             */
		}

		buildTypes {
	        release {
	            minifyEnabled false
             	proguardFiles.add(file("proguard-rules.pro"))
			}
		}

		productFlavors {
			// for detailed abiFilter descriptions, refer to "Supported ABIs" @
			// https://developer.android.com/ndk/guides/abis.html#sa
			/*****
			 create("arm") {
			 ndk.abiFilters.add("armeabi")
			 }
			 *****/
			create("arm7") {
				ndk.abiFilters.add("armeabi-v7a")
			}
			/*****
			 create("arm8") {
			 ndk.abiFilters.add("arm64-v8a")
			 }
			 create("x86") {
			 ndk.abiFilters.add("x86")
			 }
			 create("x86-64") {
			 ndk.abiFilters.add("x86_64")
			 }
			 create("mips") {
			 ndk.abiFilters.add("mips")
			 }
			 create("mips-64") {
			 ndk.abiFilters.add("mips64")
			 }

			 // To include all cpu architectures, leaves abiFilters empty
			 create("all")
			 *****/
		}
	}
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
}
